<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- 	Bean : 스프링 컨테이너에 의해 생명주기가 관리되는 객체(컨테이너가 관리하는 객체,객체 생성에 대한 제어권이 역전 된 것. Spring이 생성하기 때문에)  -->
<!-- 	Spring container / IoC container / DI container / Bean container -->
		
		<!-- 타입 필요 class -->
		<!-- bean id 정할때  사용할수 있는 id 를 미리 준다. (COC) -->
		<!-- dao는 기본생성자가 있기 때문에 처음 오류가 뜨지 않는다.  -->
		<bean id="exampleDAO_Oracle" class="kr.or.ddit.exemple.dao.ExampleDAO_Oracle"></bean>
		<bean id="exampleDAO_MySql" class="kr.or.ddit.exemple.dao.ExampleDAO_MySql"></bean>
		<!-- 컨테이너를 사용하기 첫번째 단계 : bean 생성   -->
		<!-- 두번째 :  -->
		<!-- dao를 서비스에 넣어줘야 한다. -->
		<!-- 지금 bean을 만드는게  java 코드를 짜고 있는것  -->
		<!-- ExampleDAO_Oracle exampleDAO_Oracle = 
									new ExampleDAO_Oracle();
		
		ExampleServiceImpl exampleServiceImpl = 
					new ExampleServiceImpl(exampleDAO_Oracle); -->
					
		<bean id="exampleServiceImpl" class="kr.or.ddit.exemple.service.ExampleServiceImpl">
			<!--argument 를 받는 생성자를 만드는 것??  -->
			<constructor-arg name = "dao" ref="exampleDAO_MySql"/> <!-- 생성자 주입 방식 사용  -->
				<!-- 생성자 주입방식이기 때문에 xml 상에서 ref 만 변경해주면 된다. 다른걸 변경할 필요가 전혀없다.   -->
				<!-- <bean class="kr.or.ddit.exemple.dao.ExampleDAO_Oracle"></bean>
			
			</constructor-arg> -->
		
		</bean>
	
</beans>
<!-- di 컨테이너 빌드페스  -->
<!-- 빈 등록 => 의존관계 형성 => 전략 주입 -->
